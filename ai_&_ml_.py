# -*- coding: utf-8 -*-
"""AI & ML .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NptTTKJFot9NfRO131SJJ4ooCQaR1lyg
"""

!pip install numpy

import numpy as np

a=np.array([1,2,3,4,5,6])
print(a)

print(a.shape)

b=np.array([[1,2],[3,4],[5,6]])
print(b)

sequence=np.arange(5,55)
print(sequence)

x=np.array([1,2])
print(type(x))
print(x.dtype)

np.ones((3,2))

c=np.random.random((4,3,2))
print(c)

g=np.linspace(10,50, num=5)
print(g)

arr=np.array([[10,21],[32,43],[54,65],[76,87],[98,100]])
print(arr[2,1])
print(arr[1:3])
print(arr[0:2,1])

!pip install numpy
import numpy as np
a=np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])
print(a.shape)
b=a[:2,1:3]
b

print(a)

b=np.array([0,2,0,1])
print(a[np.arange(4),b])

a[np.arange(4),b]+=10
print(a)

bool_idx=(a>2)
print(bool_idx)

a=np.array([1,2,3,4,5,-6,-7,-8,-9,-4,-3,9])
print(np.argmax(a))

a=[0]
a=np.append(a,[1,2,3,4,5])
print(a)

a=np.delete(a,[2,3])
print(a)

a=np.array([[1,3,2],[4,6,5],[7,8,9],[10,11,12]])
print(a)
a=np.sort(a,axis=1,kind="quicksort")
print(a)

# Commented out IPython magic to ensure Python compatibility.
# %%time
# b=np.sum(a)
# print(b)

# transpose
print(a.T)
print(a.T)

#broadcast
a1=np.array([[1,2,3],[4,6,8]])
print(a1+np.array([1,1,1]))
a

"""pandas"""

import pandas as pd

s=pd.Series([1,2,3,4,5])
type(s)
s

s.drop(4)

s=pd.Series([10,21,32,43,54,65,76,87,98])
s
# type(s)

s.drop(3)

s.drop(3,inplace=True)

s.iloc[3]

s

s.index

import pandas as pd
s=pd.Series([10,20,30,40,50,60],index=['a','b','c','d','d','f'])
s

s['d']

s.iloc[1]

data=[['Tharun',21,'male','18-02-2003'],['Vikas',21,None,'19-02-2003']]
data

df=pd.DataFrame(data)
df

df[0:1]

df[0:2]

df[0][1]

df[[0,3]]

df[1:2]

df=pd.DataFrame(data,columns=['Name','Age','gender','DOB'])
df

df['Name']

df.loc[1,'Age']

df.iloc[1,3]

a=pd.Series([1,2,3,4])
a.plot()

a.hist(bins=1)

a.plot.bar()

type(a)

s=a.to_numpy()
s

type(s)

df.head()

df.tail(-1)

# None ,'',' ','-','?','Nil',np.nan(not a number)

df

df.isnull().sum()

data=[['Tharun',21,'male','18-02-2003'],['Vikas',21,None,'19-02-2003'],['kavin','NaN','NaN']]
df=pd.DataFrame(data)
data
df

df=pd.DataFrame(data,columns=['Name','Age','Gender','DOB'])
df

df.dropna()

df

#axis=0 na row ,axis=1 na column
df.drop(['Gender'],axis=1,inplace=True)
df

df.drop([0,2])

df

a=np.array([11,21,31,41,51,54,66,78,98])
a

a>40

a[a>40]

a[a%2==0]

a[a%2!=0]

df

df.info()

df['Name'].str.contains('k')

print(df.shape)
print(df.size)
print(df.axes)
print(df.ndim)
print(df.dtypes)
print(df.index)
print(df.columns)
print(df.values)

df.info()

df.head()

df.tail()

# df1=pd.DataFrame('KK',22,'23-10-2003')
# pd.concat(df,df1)
df.Name

df['DOB'][1]

df.loc[1]['Name']

df.loc[0,'Name']

df['DOB'][2]='20-02-2003'
df

df.loc[2,'DOB']

df=pd.read_html("https://en.wikipedia.org/wiki/Leo_(2023_Indian_film)")
df

df=pd.read_table('https://raw.githubusercontent.com/nunnarilabs/ml/master/pandas/chipotle.tsv')
df

df.describe()

df.isnull().sum()

df.item_price=df.item_price.str.replace('$','')
df.head(10)

df.item_price =df.item_price.astype(float)
df

type(df.item_price[0])

# df =df.item_price*100
# df

df_drink =df[df.item_price<1.1]
df_drink

df_drink.item_name.nunique()

df_drink.item_name.value_counts()

df

df[df.item_name=='Chicken Bowl']

df[df.item_name=='Chicken Bowl'].choice_description.value_counts()

df[df.item_name=='Chicken Bowl'].choice_description.nunique()

df.choice_description

df.dropna(inplace=True)

df[df.choice_description.str.contains('Black Beans')].choice_description.value_counts()

df[df.choice_description.str.contains('Black Beans')].item_name.value_counts()

df[(df.item_price <10) & (df.item_name=='Chicken Bowl')].sort_values(['item_price'])

movies =pd.read_csv("https://raw.githubusercontent.com/nunnarilabs/ml/master/pandas/imdb_1000.csv")
movies

movies.head()

movies.dropna(inplace=True)

movies[(movies.star_rating >9) & (movies.content_rating=='R')].sort_values('star_rating')

movies[(movies.star_rating >8) & (movies.genre=='Action')].sort_values(['duration'])

movies[movies.actors_list.str.contains('Leonardo DiCaprio')]

movies[movies.actors_list.str.contains('Leonardo DiCaprio')].sort_values(['star_rating','duration'],ascending=[False,True])

ufo=pd.read_csv('https://raw.githubusercontent.com/nunnarilabs/ml/master/pandas/ufo.csv')
ufo

# ufo.dropna(inplace=True)

ufo.dropna(subset=['City','Shape Reported'],how='any').shape

ufo.dropna(subset=['City','Shape Reported'],how='all').shape

ufo['Shape Reported'].value_counts()

ufo['Shape Reported'].isnull().sum()

drinks=pd.read_csv('https://raw.githubusercontent.com/nunnarilabs/ml/master/pandas/drinks.csv')
drinks

drinks.info()

drinks.beer_servings.mean()

drinks.beer_servings.min()

drinks.beer_servings.mean()

drinks.describe()

drinks[drinks.continent=='Asia'].describe()

drinks[drinks.continent=='Asia'].beer_servings.agg(['mean','max','min'])

drinks.groupby('continent').beer_servings.max()

drinks.groupby('continent').beer_servings.min()

drinks.groupby('continent').beer_servings.agg(['mean','max','min'])



















